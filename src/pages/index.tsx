import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { useState } from "react";
import Link from "next/link";
import Pagination from "../component/pagination";
import { IMovie } from "@/utils/interface";
// import styles from "@/styles/Home.module.css";
import MovieCard from "../component/movieCard/MovieCard";
import Navbar from "@/component/navbar";
import { useRouter } from "next/router";
import NavLayout from "@/layout/intex";
const inter = Inter({ subsets: ["latin"] });

interface IMovies {
  movies: IMovie[];
  pagination: any;
}
export default function Home({ movies, pagination }: IMovies) {
  const router = useRouter();

  const [cur, setCur] = useState<number>(1);
  const pages = [1, cur + 1];

  // const response = usePosts("1");
  console.log("PAGE", pagination);
  // console.log("RESP", response);

  const handlePagination = (action: string) => {
    if (action === "next") {
      router.replace(`?limit=10&page=${pagination.page + 1}`);
    } else {
      router.replace(`?limit=10&page=${pagination.page - 1}`);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="min-h-screen bg-black">
        <div className="container mx-auto ">
          <h1 className="font-bold text-red-600 text-4xl p-4">
            Киноны жагсаалт
          </h1>
          <div className=" grid  lg:grid-cols-5 gap-2 md:grid-cols-3  grid-cols-2">
            {movies.length > 0 &&
              movies.map((movie: IMovie, idx) => (
                <MovieCard key={idx} movie={movie} />
              ))}
          </div>
          <Pagination
            pages={pages}
            cur={pagination.page}
            pageCount={pagination.pageCount}
            nextPage={() => {
              handlePagination("next");
            }}
            prevPage={() => {
              handlePagination("prev");
            }}
          />
        </div>
      </div>
    </>
  );
}

export async function getServerSideProps(ctx: any) {
  // console.log("kk", ctx);
  const { page, limit } = ctx.query;
  console.log("limit", limit);

  const res = await fetch(
    `http://localhost:8009/movies?limit=${limit || 6}&page=${page || 1}`
  );
  // const { limit, page } = ctx;
  // const res = await fetch(
  //   `http://localhost:8009/movies?limit=${limit}&page=${page}`
  // );
  const data = await res.json();
  return {
    props: { movies: data.movies, pagination: data.pagination },
  };
}
